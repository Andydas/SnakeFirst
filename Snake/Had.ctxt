#BlueJ class context
comment0.target=Had
comment0.text=\r\n\ Had,\ jeho\ pohyb\ po\ poli\ a\ kontrola\ kolizie\ +\ vytvorenie\ jablka.\u0000\r\n
comment1.params=dlzka\ hraciePole\ farba
comment1.target=Had(int,\ HraciePole,\ java.lang.String)
comment1.text=\r\n\ Vytvori\ prveho\ hada\ ako\ ArrayList\ s\ pozadovanou\ dlzkou\ a\ farbou\ a\ jablko\ na\ zadanom\ hracom\ poli.\r\n
comment10.params=
comment10.target=void\ posunD()
comment10.text=\r\n\ Posunie\ hada\ o\ jeden\ stvorec\ smerom\ DOLE.\r\n\ Prida\ stvorec\ na\ prve\ miesto\ o\ riadok\ nizsie\ a\ odstrani\ posledny\ stvorec\r\n
comment11.params=
comment11.target=void\ posunL()
comment11.text=\r\n\ Posunie\ hada\ o\ jeden\ stvorec\ smerom\ DOLAVA.\r\n\ Prida\ stvorec\ na\ prve\ miesto\ o\ stlpec\ nizsie\ a\ odstrani\ posledny\ stvorec\r\n
comment12.params=
comment12.target=void\ posunR()
comment12.text=\r\n\ Posunie\ hada\ o\ jeden\ stvorec\ smerom\ DOPRAVA.\r\n\ Prida\ stvorec\ na\ prve\ miesto\ o\ stlpec\ vyssie\ a\ odstrani\ posledny\ stvorec\r\n
comment13.params=
comment13.target=void\ posunH()
comment13.text=\r\n\ Posunie\ hada\ o\ jeden\ stvorec\ smerom\ HORE.\r\n\ Prida\ stvorec\ na\ prve\ miesto\ o\ riadok\ vyssie\ a\ odstrani\ posledny\ stvorec\r\n
comment14.params=
comment14.target=boolean\ kontrolaPrehry()
comment14.text=\r\n\ Kontroluje\ ci\ had\ nenarazil\ do\ steny\ alebo\ do\ seba.\r\n\ Hodnota\ true\ \=\ had\ nabural,\ to\ znamena\ prehru\r\n\ Hodnota\ false\ \=\ pred\ hadom\ je\ volne\ policko,\ vsetko\ je\ ok\r\n\ Kontroluje\ sa\ stvorec\ pred\ hlavou\ hada\r\n
comment15.params=
comment15.target=void\ skryJablko()
comment15.text=\r\n\ Skruje\ aktualne\ jablko\ na\ hracom\ poli.\r\n
comment16.params=
comment16.target=void\ vytvorJablko()
comment16.text=\r\n\ Zobrazi\ nove\ jablko\ s\ nahodnymi\ suradnicami\ na\ hracom\ poli.\r\n
comment17.params=
comment17.target=void\ nastavPauzu()
comment17.text=\r\n\ Obrati\ hodnotu\ pauzy.\r\n\ Ak\ je\ hra\ pauznuta,\ odpauzuje\ ju.\r\n\ Ak\ je\ hra\ odpauzovana,\ pauzne\ ju.\r\n
comment18.params=
comment18.target=java.lang.String\ getFarba()
comment18.text=\r\n\ Vrati\ String\ hodnotu\ farby.\r\n
comment19.params=
comment19.target=char\ getSmer()
comment19.text=\r\n\ Vrati\ char\ hodnotu\ smeru\ (vlavo\ 'l',\ vpravo\ 'r',\ hore\ 'h',\ dole\ 'd').\r\n\ \r\n
comment2.params=
comment2.target=void\ vytvorHada()
comment2.text=\r\n\ Vytvori\ noveho\ hada.\r\n
comment20.params=
comment20.target=int\ getStlpec()
comment20.text=\r\n\ Vrati\ int\ hodnotu\ ako\ suradnicu\ stlpca\ na\ ktorom\ je\ hlava\ hada.\r\n
comment21.params=
comment21.target=int\ getRiadok()
comment21.text=\r\n\ Vrati\ int\ hodnotu\ ako\ suradnicu\ riadku\ na\ ktorom\ je\ hlava\ hada.\r\n
comment22.params=
comment22.target=boolean\ getPauza()
comment22.text=\r\n\ Vrati\ boolean\ hodnotu\ pauzy,\ TRUE\ \=\ hra\ je\ zastavena,\ FALSE\ \=\ hra\ nie\ je\ zastavena.\r\n
comment3.params=
comment3.target=void\ vymazHada()
comment3.text=\r\n\ Vymaze\ aktualneho\ hada.\r\n
comment4.params=riadok\ stlpec\ farba
comment4.target=void\ pridajCastHada(int,\ int,\ java.lang.String)
comment4.text=\r\n\ Prida\ cast\ hada\ na\ suradnice\ podla\ riadku,\ stlpca\ a\ zvolenej\ farby.\r\n
comment5.params=riadok\ stlpec
comment5.target=void\ skry(int,\ int)
comment5.text=\r\n\ Skryje\ vykresleny\ stvorec\ na\ zadanych\ suradniciach.\r\n
comment6.params=riadok\ stlpec
comment6.target=void\ zobraz(int,\ int)
comment6.text=\r\n\ Zobrazi\ vykresleny\ stvorec\ na\ zadanych\ suradniciach.\r\n
comment7.params=smer
comment7.target=void\ urciSmer(char)
comment7.text=\r\n\ Urci\ smer\ pohybu\ hada\ (vlavo\ 'l',\ vpravo\ 'r',\ hore\ 'h',\ dole\ 'd').\r\n
comment8.params=
comment8.target=void\ pohyb()
comment8.text=\r\n\ Vykona\ pohyb\ hada\ do\ urciteho\ smeru\ podla\ urceneho\ smeru\ pohybu.\r\n
comment9.params=
comment9.target=boolean\ zjedolJablko()
comment9.text=\r\n\ Kontroluje,\ ci\ had\ zjedol\ jablko,\ TRUE\ \=\ zjedol,\ FALSE\ \=\ nezjedol.\r\n\ Kontroluje\ sa\ stvorec\ pred\ hlavou\ hada.\r\n
numComments=23
